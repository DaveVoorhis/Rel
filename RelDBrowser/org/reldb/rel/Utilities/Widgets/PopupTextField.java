/*
 * PopupTextField.java
 *
 * Created on November 6, 2002, 12:08 AM
 */

package org.reldb.rel.Utilities.Widgets;

/**
 *
 * @author  Dave Voorhis
 */
public class PopupTextField extends javax.swing.JDialog {
    
	private static final long serialVersionUID = 1L;
	
	private javax.swing.JTextField jTextField;
    private javax.swing.JLabel jLabelPrompt;

    private boolean ExitedViaOk = false;
        
    /** Creates new form PopupTextField */
    public PopupTextField(String Title, String Prompt) {
        setTitle(Title);
        setResizable(false);
        initComponents();
        setPrompt(Prompt);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        javax.swing.JPanel jPanelMain = new javax.swing.JPanel();
        javax.swing.JPanel jPanelButtons = new javax.swing.JPanel();
        javax.swing.JButton jButtonOk = new javax.swing.JButton();
        javax.swing.JButton jButtonCancel = new javax.swing.JButton();

        jLabelPrompt = new javax.swing.JLabel();
        jTextField = new javax.swing.JTextField();
        ExitedViaOk = false;

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanelMain.add(jLabelPrompt);

        jTextField.setPreferredSize(new java.awt.Dimension(200, 20));
        jTextField.setMinimumSize(new java.awt.Dimension(200, 20));
        jPanelMain.add(jTextField);
        jPanelMain.setPreferredSize(new java.awt.Dimension(300, 30));

        getContentPane().setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanelMain, java.awt.BorderLayout.CENTER);

        jButtonOk.setMnemonic('O');
        jButtonOk.setText("Ok");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jPanelButtons.add(jButtonOk);

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jPanelButtons.add(jButtonCancel);

        getContentPane().add(jPanelButtons, java.awt.BorderLayout.SOUTH);

        pack();
    }

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {
        ExitedViaOk = false;
        close();
    }

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {
        ExitedViaOk = true;
        close();
    }
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {
        ExitedViaOk = false;
        close();
    }
    
    /** Close the dialog */
    private void close() {
        setVisible(false);
        dispose();
    }
    
    /** True if exited via ok. */
    public boolean isExitedViaOk() {
        return ExitedViaOk;
    }
    
    /** Get text field contents. */
    public String getText() {
        return jTextField.getText();
    }
    
    /** Set text field contents. */
    public void setText(String s) {
        jTextField.setText(s);
    }
    
    /** Get the prompt. */
    public String getPrompt() {
        return jLabelPrompt.getText();
    }
    
    /** Set the prompt. */
    public void setPrompt(String s) {
        jLabelPrompt.setText(s);
    }
    
    /**
     * Pop up a modal window with a single text field.
     * Return the contents of the text field if user selects 'Ok',
     * otherwise return null.
     */
    public static String getText(String Title, String Prompt) {
        PopupTextField popup = new PopupTextField(Title, Prompt);
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        popup.setLocation((int)(screenSize.getWidth() - popup.getWidth()) / 2, (int)(screenSize.getHeight() - popup.getHeight()) / 2);        
        popup.setModal(true);
        popup.setVisible(true);
        if (popup.isExitedViaOk())
            return popup.getText();
        else
            return null;
    }

    /**
     * Pop up a modal window with a single text field.
     * Return the contents of the text field if user selects 'Ok',
     * otherwise return null.
     */
    public static String getText(int Xpos, int Ypos, String Title, String Prompt) {
        PopupTextField popup = new PopupTextField(Title, Prompt);
        popup.setLocation(Xpos, Ypos);
        popup.setModal(true);
        popup.setVisible(true);
        if (popup.isExitedViaOk())
            return popup.getText();
        else
            return null;
    }
    
}
